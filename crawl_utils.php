<?php
define('GET_DATA_CACHE_ROOT', '/tmp/g2_crawled');

function get_categories($url){
	$content = get_curl($url);

	$xml = new DOMDocument();
	$xml->loadHTML($content);
	$xpath = new DOMXpath($xml);

	$xpath_div = "//ul[contains(@class, 'breadcrumbs')]//li";
	$nodes = $xpath->query($xpath_div);

	$category = array();
	$categories = array();
	if($nodes->length){
		foreach($nodes as $node){
			$category['name'] = $node->nodeValue;
			$category['url'] = $node->getElementsByTagName('a')->item(0)->getAttribute('href');

			if(!in_array($category['name'], array_column($categories, 'name'))){
				$categories[] = $category;
			}
		}
	}else{
		echo 'No categories found';
	}

	return $categories;
}

function crawl_category_url($url){
	$content = get_curl($url);

	$xml = new DOMDocument();
	$xml->loadHTML($content);
	$xpath = new DOMXpath($xml);

	$xpath_div = '//img[@class="js-product-img"]';
	$nodes = $xpath->query($xpath_div);

	if($nodes->length){
		$softwares = array();
		for($i=1; $i<$nodes->length; $i=$i+2){
			$software = array();
			$soft_name = $nodes->item($i)->getAttribute('alt');
			$soft_src = $nodes->item($i)->attributes->getNamedItem('src')->nodeValue;
			preg_match('/product\/image\/([0-9]*)\//', $soft_src, $matches);
			$software['name'] = $soft_name;
			$software['id'] = $matches[1];
			$softwares[] = $software;
		}
	}

	return $softwares;
}

function crawl_software_url($url){
	$content = get_curl($url);

	$xml = new DOMDocument();
	$xml->loadHTML($content);
	$xpath = new DOMXpath($xml);

	$xpath_div = '//div[@itemprop="reviewBody"]';
	$nodes = $xpath->query($xpath_div);

	$likes = array();
	$dislikes = array();
	$business = array();
	for($i=0; $i<$nodes->length; $i++){
		$lines = $xpath->query('.//div', $nodes->item($i));

		$likes[] = $lines->item(0)->nodeValue;
		$dislikes[] = $lines->item(1)->nodeValue;
		if($lines->length == '4'){
			$business[] = $lines->item(3)->nodeValue;
		}else{
			$business[] = $lines->item(2)->nodeValue;
		}
	}

	return array($likes, $dislikes, $business);
}

function get_cat_pagination($url){
	$content = get_curl($url);

	$xml = new DOMDocument();
	$xml->loadHTML($content);
	$xpath = new DOMXpath($xml);

	$xpath_div = '//nav[@class="pagination"]//span[last()]';
	$nodes = $xpath->query($xpath_div);

	if($nodes->length <= 0){
		return 1;
	}else{
		$last_url = $nodes->item(0)->getElementsByTagName('a')->item(0)->getAttribute('href');
	}

	preg_match('/page=([0-9]*)/', $last_url, $matches);
	return $matches[1];
}

function get_pagination($url){
	$content = get_curl($url);

	$xml = new DOMDocument();
	$xml->loadHTML($content);
	$xpath = new DOMXpath($xml);

	$xpath_div = '//span[@class="last"]/a';
	$nodes = $xpath->query($xpath_div);

	if($nodes->length <= 0){
		$xpath_div = "//ul[contains(@class, 'pagination')]//li[last()]/a";
		$nodes = $xpath->query($xpath_div);

		if($nodes->length <= 0){
			return 1;
		}
	}

	if($nodes->length > 0) {
		$last_url = $nodes->item(0)->getAttribute("href");
		preg_match('/page=([0-9]*)/', $last_url, $matches);
		return $matches[1];
	}else{
		return 1;
	}
}

function get_curl($url){
	$cache_name = GET_DATA_CACHE_ROOT ."/".md5($url);

	if (file_exists($cache_name)) {
		$content = file_get_contents($cache_name);
	}else{
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL,"$url");
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
		curl_setopt($ch, CURLOPT_HEADER, 1);
		curl_setopt($ch, CURLOPT_TIMEOUT, 30);
		curl_setopt($ch, CURLOPT_ENCODING, "");
		curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/5.0 (Linux; U; Android 4.0.3; de-ch; HTC Sensation Build/IML74K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30");

		$response = curl_exec($ch);
		$header_size = curl_getinfo($ch, CURLINFO_HEADER_SIZE);
		$content = substr($response, $header_size);

		curl_close ($ch);

		$fp = fopen($cache_name, 'w'); 
		fwrite($fp, $content); 
		fclose($fp);
	}

	return $content;
}

?>
